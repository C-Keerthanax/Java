''' TIME LIMIT EXCEEDED BUT STILL I HAVE WRITTEN THIS CODE '''


class Solution {
    public int divide(int dividend, int divisor) {
        int count =0;
        long n = dividend;
        int d = divisor;
        if(n>=Integer.MAX_VALUE && d==1){
            return(Integer.MAX_VALUE);
        }
        else if(n>=Integer.MAX_VALUE && d==-1){
            return (Integer.MIN_VALUE);
        }
        else if(n<=Integer.MIN_VALUE && d==1){
            return(Integer.MIN_VALUE);
        }else if(n<=Integer.MIN_VALUE && d==-1){
            return(Integer.MAX_VALUE);
        }
        else if(n>=Integer.MAX_VALUE && d>1){
            for(long i=n;i>=d;i-=d){
             count++;
            }
            return(count);
        }
        else if(n>=Integer.MAX_VALUE && d<-1){
            d = -(d);
            for(long i=n;i>=d;i-=d){
             count++;
            }
            return(-(count));
        }
        else if(n<=Integer.MIN_VALUE && d>1){
            n= -(n);
            for(long i=n;i>=d;i-=d){
             count++;
            }
            return(-(count));
        }else if(n<=Integer.MIN_VALUE && d<-1){
            n = -(n);
            d = -(d);
            for(long i=n;i>=d;i-=d){
             count++;
            }
            return(count);
        }
       else if ( n>=0 && d>0  ){
            for(long i=n;i>=d;i-=d){
             count++;
            }
            return(count);
        }else if( n>0 && d<0){
            d = -(d);
            for(long i=n;i>=d;i-=d){
                count++;
               }
               return(-(count));

        }else if(n<0 && d>0){
            n= -(n);
            for(long i=n;i>=d;i-=d){
                count++;
               }
               return(-(count));


        }else{
             n = -(n);
            d = -(d);
            for(long i=n;i>=d;i-=d){
                count++;
               }
               return(count);
            

        }
       
        
    }
}
